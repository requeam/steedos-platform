function module(e,t,i){"use strict";var n,r=P(e("../../core/renderer")),l=e("../../core/utils/type"),a,o=P(e("./ui.grid_core.modules")),s,u=P(e("./ui.grid_core.utils")),d,f=P(e("../../events/core/events_engine")),p,c=P(e("../../localization/message")),h,g=P(e("../check_box")),x,v=P(e("../filter_builder/utils")),m=e("../../core/utils/deferred"),C,_=P(e("../../core/utils/inflector"));function P(e){return e&&e.__esModule?e:{default:e}}var b="filter-panel",T="filter-panel-text",V="filter-panel-checkbox",k="filter-panel-clear-filter",E="filter-panel-left",D="filterPanel",F=o.default.View.inherit({isVisible:function(){return this.option("filterPanel.visible")&&this.getController("data").dataSource()},init:function(){var e=this;this.getController("data").dataSourceChanged.add((function(){return e.render()}))},_renderCore:function(){var e,t=this,i=this.element();i.empty().addClass(this.addWidgetPrefix("filter-panel")),e=(0,r.default)("<div>").addClass(this.addWidgetPrefix("filter-panel-left")).appendTo(i),this.option("filterValue")||this._filterValueBuffer?(e.append(this._getCheckElement()).append(this._getFilterElement()).append(this._getTextElement()),i.append(this._getRemoveButtonElement())):e.append(this._getFilterElement()).append(this._getTextElement())},_getCheckElement:function(){var e=this,t=(0,r.default)("<div>").addClass(this.addWidgetPrefix("filter-panel-checkbox"));return e._createComponent(t,g.default,{value:e.option("filterPanel.filterEnabled"),onValueChanged:function(t){e.option("filterPanel.filterEnabled",t.value)}}),t.attr("title",this.option("filterPanel.texts.filterEnabledHint")),t},_getFilterElement:function(){var e=this,t=(0,r.default)("<div>").addClass("dx-icon-filter");return f.default.on(t,"click",(function(){e.option("filterBuilderPopup.visible",!0)})),t},_getTextElement:function(){var e,t=this,i=(0,r.default)("<div>").addClass(t.addWidgetPrefix("filter-panel-text")),n=t.option("filterValue");return n?(0,m.when)(t.getFilterText(n,t.getController("filterSync").getCustomFilterOperations())).done((function(e){var r=t.option("filterPanel.customizeText");if(r){var l=r({component:t.component,filterValue:n,text:e});"string"==typeof l&&(e=l)}i.text(e)})):(e=t.option("filterPanel.texts.createFilter"),i.text(e)),f.default.on(i,"click",(function(){t.option("filterBuilderPopup.visible",!0)})),i},_getRemoveButtonElement:function(){var e=this,t=(0,r.default)("<div>").addClass(this.addWidgetPrefix("filter-panel-clear-filter")).text(this.option("filterPanel.texts.clearFilter"));return f.default.on(t,"click",(function(){e.option("filterValue",null)})),t},optionChanged:function(e){switch(e.name){case"filterValue":this._invalidate(),this.option("filterPanel.filterEnabled",!0),e.handled=!0;break;case"filterPanel":this._invalidate(),e.handled=!0;break;default:this.callBase(e)}},_getConditionText:function(e,t,i){var n="["+e+"] "+t;return(0,l.isDefined)(i)&&(n+=i),n},_getValueMaskedText:function(e){return Array.isArray(e)?"('"+e.join("', '")+"')":" '"+e+"'"},_getValueText:function(e,t,i){var n=this,r=new m.Deferred,a=t&&t.customizeText;if((0,l.isDefined)(i)||a)if(!a&&e.lookup)v.default.getCurrentLookupValueText(e,i,(function(e){r.resolve(n._getValueMaskedText(e))}));else{var o=Array.isArray(i)?i:u.default.getDisplayValue(e,i);(0,m.when)(v.default.getCurrentValueText(e,o,t,"filterPanel")).done((function(e){r.resolve(n._getValueMaskedText(e))}))}else r.resolve("");return r.promise()},getConditionText:function(e,t){var i,n=this,r=e[1],l=new m.Deferred,a=v.default.getCustomOperation(t.customOperations,r),o=v.default.getField(e[0],t.columns),s=o.caption||"",u=e[2];return i=a?a.caption||_.default.captionize(a.name):null===u?v.default.getCaptionByOperation("="===r?"isblank":"isnotblank",t.filterOperationDescriptions):v.default.getCaptionByOperation(r,t.filterOperationDescriptions),this._getValueText(o,a,u).done((function(e){l.resolve(n._getConditionText(s,i,e))})),l},getGroupText:function(e,t,i){var n=this,r=new m.Deferred,l=[],a=v.default.getGroupValue(e);return e.forEach((function(e){v.default.isCondition(e)?l.push(n.getConditionText(e,t)):v.default.isGroup(e)&&l.push(n.getGroupText(e,t,!0))})),m.when.apply(this,l).done((function(){for(var e=arguments.length,n=Array(e),l=0;l<e;l++)n[l]=arguments[l];var o=void 0;if("!"===a[0]){var s=t.groupOperationDescriptions["not"+a.substring(1,2).toUpperCase()+a.substring(2)].split(" ");o=s[0]+" "+n[0]}else o=n.join(" "+t.groupOperationDescriptions[a]+" ");i&&(o="("+o+")"),r.resolve(o)})),r},getFilterText:function(e,t){var i=this,n={customOperations:t,columns:this.getController("columns").getFilteringColumns(),filterOperationDescriptions:this.option("filterBuilder.filterOperationDescriptions"),groupOperationDescriptions:this.option("filterBuilder.groupOperationDescriptions")};return v.default.isCondition(e)?this.getConditionText(e,n):this.getGroupText(e,n)}});i.exports={defaultOptions:function(){return{filterPanel:{visible:!1,filterEnabled:!0,texts:{createFilter:c.default.format("dxDataGrid-filterPanelCreateFilter"),clearFilter:c.default.format("dxDataGrid-filterPanelClearFilter"),filterEnabledHint:c.default.format("dxDataGrid-filterPanelFilterEnabledHint")}}}},views:{filterPanelView:F},extenders:{controllers:{data:{optionChanged:function(e){switch(e.name){case"filterPanel":this._applyFilter(),e.handled=!0;break;default:this.callBase(e)}}}}}}}

